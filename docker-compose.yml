version: "3.9"

services:
  frontend:
    build: ./web
    ports:
      - "8080:80"
    depends_on:
      - backend-gateway
      - backend-analytics
      - backend-resource
      - connector
    networks:
      - network

  backend-analytics:
    build: ./backend/analytics
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
  backend-resource:
    build: ./backend/resource
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
  backend-gateway:
    build: ./backend/gateway
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
  connector:
    build: ./connector
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network

  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "testdb"
      POSTGRES_USER: "pguser"
      POSTGRES_PASSWORD: "pswd"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pguser -d testdb" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - network

volumes:
  db-data:

networks:
  network:
    driver: bridge
